'use strict'
;(function () {
  // npx esbuild shared\utils\pluginConfig2ComfyNodeDefs.ts --minify
  function pluginConfig2ComfyNodeDefs(a,O=!0){const d={};if(!a||!a.functions)return d;a.functions.forEach(o=>{const p={name:`plugin.${a.plugin_name}.${o.function_name}`,category:`plugins/${a.plugin_name}`,display_name:o.display_name||o.function_name,description:"",python_module:`custom_nodes.${a.plugin_name}.${o.function_name}`,input:{required:{},optional:{}},input_order:{required:[],optional:[]},output:[],output_name:[],output_is_list:[],output_node:!1},A=o.description||a.description||"",c=o.version||a.version||"";c&&(p.display_name+=`@v${c}`),p.description=A;const i=p.input,s=p.input_order,r=o.inputs||o.input||{},_=r.sources||r.source||[],h=r.args||[];_.length>0&&_.forEach(e=>{const n=Array.isArray(e.type)&&e.type[0]?e.type[0]:e.type,l=e.optional!==!0,u=e.default;let t=typeof e.options=="object"&&e.options&&Object.keys(e.options).length>0?e.options:u?{default:u}:null;u&&t&&t.default===void 0&&(t.default=u),e.description,["BOOLEAN","INT","FLOAT","STRING"].includes(`${n}`.toUpperCase())&&(t={...t||{},forceInput:!0}),l?(i.required[e.name]=t?[n,t]:[n],s.required.push(e.name)):(i.optional[e.name]=t?[n,t]:[n],s.optional.push(e.name))}),h.length>0&&h.forEach(e=>{const n=Array.isArray(e.type)&&e.type[0]?e.type[0]:e.type,l=e.optional===!1,u=e.default;let t=typeof e.options=="object"&&e.options&&Object.keys(e.options).length>0?e.options:u?{default:u}:null;if(u&&t&&t.default===void 0&&(t.default=u),e.description,l||(t={...t||{},isOptional:!0}),n==="COMBO"&&t?.values&&Array.isArray(t.values)){const{values:y,...f}=t;i.optional[e.name]=[y,f],s.optional.push(e.name)}else if(n==="STRING"&&t?.enum&&Array.isArray(t.enum)){const{enum:y,...f}=t;i.optional[e.name]=[y,f],s.optional.push(e.name)}else l?(i.required[e.name]=t?[n,t]:[n],s.required.push(e.name)):(i.optional[e.name]=t?[n,t]:[n],s.optional.push(e.name))}),Object.keys(i.required).length===0&&delete i.required,Object.keys(i.optional).length===0&&delete i.optional,s.required.length===0&&delete s.required,s.optional.length===0&&delete s.optional;const v=p.output,N=p.output_name,$=p.output_is_list,q=o.outputs||o.output||[];q.length>0&&q.forEach(e=>{v.push(e.type),N.push(e.name),$.push(!1),e.description}),d[p.name]=p});const m=JSON.stringify(d,null,2);return O&&console.log(m),JSON.parse(m)}
  window.$pluginConfig2ComfyNodeDefs = pluginConfig2ComfyNodeDefs
})()
